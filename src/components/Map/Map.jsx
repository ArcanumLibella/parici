import React, { useState, useEffect, useContext, foo } from 'react'
import SportContext from '../../SportContext'

import District from './District'
import Pin from './Pin'
import axios from 'axios';

const Map = ({onDistrictClick}) => {
  // CONTEXT
  const sportsSelection = useContext(SportContext)

  // STATES
  const [pierre, setColors] = useState([])

  // API
  const host = 'http://localhost:8000'
  const apiHeader = { headers: { accept: '*/json' } }
  const apiTravel = '/api/travels'

  const handleClick = function (number) {
    onDistrictClick(number)
  }

  let travels = []
  let colors = []
  const foo = () => {
    sportsSelection.forEach(competition => {
      let url = host + apiTravel + '/?idCompetition=' + competition
      axios
        .get(url, apiHeader)
        .then(res => {
          travels.push(res)
          if (travels.length === sportsSelection.length) {
            computeColors()
          }
        })
    })
  }

  const rgbBuilder = function (r, g, b) {
    return "rgb(" + Math.round(r) + "," + Math.round(g) + "," + Math.round(b) + ")"
  }

  const green = {
    r: 39,
    g: 251,
    b: 107
  }

  const blue = {
    r: 68,
    g: 82,
    b: 197
  }

  const computeColors = function () {
    let times = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    travels.forEach(travel => {
      travel.data.forEach(row => {
        times[row.area - 1] += row.time
      })
    })
    for (let i = 0; i < times.length; i++) {
      times[i] = times[i] / travels.length
    }
    let min = Math.min.apply(null, times)
    let max = Math.max.apply(null, times)
    let diff = max - min
    // console.log("hello")

    for (let i = 0; i < times.length; i++) {

      let factorRB = (times[i] - min) / diff;
      let factorG = ((min - times[i]) / diff) + 1;

      let diffRed = blue.r - green.r
      let diffGreen = green.g - blue.g
      let diffBlue = blue.b - green.b

      colors[i] = rgbBuilder((diffRed * factorRB) + green.r, (diffGreen * factorG) + blue.g, (diffBlue * factorRB) + green.b)
    }
    setColors(colors)
  }

  useEffect(() => {
    foo()
  }, [sportsSelection])

  const districts = [
    "M381.821 306.342C381.618 306.206 381.405 306.085 381.184 305.98L343.398 288.074C340.916 286.898 339.848 283.941 341.004 281.451L353.513 254.504C354.139 253.156 355.331 252.157 356.767 251.776L359.214 251.128C361.062 250.638 363.027 251.244 364.277 252.69L370.885 260.332C371.451 260.985 372.175 261.481 372.989 261.771L441.816 286.29C444.42 287.217 445.777 290.081 444.846 292.684L443.24 297.176L427.161 329.843C425.826 332.555 422.409 333.471 419.896 331.792L381.821 306.342Z",
    "M441.826 286.293C444.426 287.219 447.284 285.863 448.212 283.264L456.792 259.233C457.758 256.529 456.252 253.568 453.497 252.756L435.991 247.594L407.274 239.133C406.396 238.874 405.464 238.861 404.579 239.096L369.968 248.276C366.396 249.223 365.05 253.584 367.468 256.379L370.885 260.332C371.451 260.985 372.175 261.481 372.989 261.771L441.826 286.293Z",
    "M495.41 267.794C494.986 266.072 493.682 264.703 491.982 264.197L463.113 255.604C460.566 254.846 457.871 256.212 456.977 258.715L446.532 287.97L444.89 292.562C443.973 295.125 445.275 297.951 447.818 298.919L465.434 305.626C466.138 305.894 466.772 306.317 467.289 306.864L478.198 318.408C478.739 318.98 479.407 319.417 480.148 319.682L502.13 327.548C505.884 328.891 509.623 325.516 508.669 321.644L495.41 267.794Z",
    "M447.494 298.796C445.083 297.877 442.369 298.945 441.229 301.26L426.84 330.495C425.624 332.966 426.634 335.954 429.099 337.18L474.161 359.588C474.595 359.804 474.994 360.081 475.348 360.412L497.09 380.722C498.432 381.976 500.437 382.202 502.025 381.278V381.278C502.959 380.734 503.645 379.848 503.938 378.807L512.913 346.899C513.105 346.214 513.15 345.496 513.043 344.793L511.344 333.634C511.068 331.817 509.816 330.298 508.086 329.679L480.148 319.682C479.407 319.417 478.739 318.98 478.198 318.408L467.289 306.864C466.772 306.317 466.138 305.894 465.434 305.626L447.494 298.796Z",
    "M487.026 416.467C486.539 417.316 485.814 418.003 484.94 418.444L451.433 435.345C450.376 435.878 449.163 436.019 448.011 435.742L412.972 427.309L398.455 422.727C395.763 421.878 394.307 418.97 395.241 416.306L419.016 348.467C420.01 345.629 423.268 344.305 425.961 345.644L469.016 367.053C469.444 367.266 469.839 367.539 470.189 367.864L492.156 388.23L496.486 393.364C497.841 394.971 498.046 397.253 497.001 399.075L487.026 416.467Z",
    "M348.639 399.142L388.477 418.692C391.167 420.013 394.407 418.686 395.398 415.857L419.605 346.787C420.36 344.63 419.558 342.236 417.656 340.97L383.249 318.077C380.509 316.254 376.785 317.53 375.739 320.65L365.322 351.707C364.96 352.787 364.241 353.71 363.283 354.325L327.784 377.111C324.733 379.069 324.715 383.523 327.752 385.505L348.639 399.142Z",
    "M365.322 351.708C364.96 352.787 364.241 353.71 363.283 354.325L321.904 380.885C321.493 381.149 321.046 381.351 320.576 381.485L309.106 384.761C308.131 385.039 307.095 385.014 306.135 384.69L287.173 378.293C286.477 378.058 285.842 377.674 285.312 377.166L229.589 323.791C227.677 321.96 227.524 318.956 229.239 316.94L246.351 296.829C246.991 296.076 247.84 295.53 248.79 295.26L265.556 290.485C265.968 290.368 266.393 290.304 266.821 290.295L323.495 289.112C324.279 289.095 325.055 289.263 325.761 289.602L335.049 294.054L373.82 312.555C376.1 313.643 377.21 316.262 376.407 318.657L365.322 351.708Z",
    "M359.525 181.603C359.773 178.109 356.444 175.45 353.091 176.463L311.81 188.936L271.714 198.751L254.322 205.049C253.07 205.503 252.051 206.437 251.49 207.644L242.515 226.966C241.835 228.432 241.904 230.136 242.702 231.541L254.948 253.116C255.119 253.417 255.258 253.735 255.363 254.064L262.997 277.989C263.672 280.103 265.66 281.52 267.879 281.467L325.439 280.099C326.227 280.08 327.008 280.247 327.718 280.588L334.351 283.764C336.863 284.967 339.873 283.886 341.046 281.36L354.114 253.211C354.37 252.659 354.523 252.066 354.566 251.46L359.525 181.603Z",
    "M361.265 250.584C357.949 251.463 354.753 248.818 354.996 245.397L359.747 178.474C359.916 176.087 361.753 174.155 364.128 173.865L376.63 172.338C377.482 172.234 378.346 172.351 379.139 172.678L404.488 183.11C405.496 183.525 406.612 183.599 407.667 183.321L434.8 176.159C438.126 175.281 441.324 177.945 441.061 181.375L436.462 241.433C436.22 244.605 433.115 246.747 430.064 245.848L407.274 239.133C406.396 238.874 405.464 238.861 404.579 239.096L362.234 250.327L361.265 250.584Z",
    "M439.871 248.738C437.608 248.071 436.119 245.913 436.299 243.561L441.263 178.744C441.455 176.239 443.476 174.265 445.985 174.132L498.073 171.382C498.458 171.362 498.844 171.386 499.223 171.454L511.687 173.699C513.875 174.093 515.54 175.885 515.773 178.096L518.864 207.421C518.955 208.279 519.266 209.099 519.767 209.801L539.099 236.891C540.894 239.407 539.999 242.934 537.22 244.289L496.477 264.16C495.351 264.709 494.059 264.816 492.859 264.458L458.571 254.252L439.871 248.738Z",
    "M512.718 342.661C513.014 344.607 514.425 346.199 516.322 346.726L615.664 374.331C619.356 375.357 622.782 372.019 621.853 368.301L616.583 347.222C616.36 346.331 615.896 345.519 615.243 344.874L590.881 320.85C590.306 320.283 589.877 319.585 589.63 318.816L581.526 293.533C581.353 292.993 581.09 292.487 580.747 292.035L545.013 244.97C543.57 243.069 540.985 242.453 538.839 243.5L498.354 263.245C496.237 264.277 495.128 266.647 495.691 268.934L510.895 330.684L512.718 342.661Z",
    "M666.751 453.332C667.95 452.632 668.804 451.464 669.108 450.109L682.875 388.724C683.527 385.816 681.507 382.987 678.545 382.66L624.336 376.674C624.069 376.645 623.805 376.594 623.546 376.522L518.007 347.194C515.353 346.457 512.601 348.006 511.855 350.658L503.81 379.262C503.599 380.011 503.105 380.649 502.433 381.04V381.04C500.824 381.976 500.449 384.137 501.649 385.561L505.203 389.776L591.684 492.375C593.251 494.234 595.929 494.696 598.029 493.47L666.751 453.332Z",
    "M451.114 543.499C450.25 543.305 449.351 543.345 448.507 543.613L427.122 550.412C423.673 551.508 420.238 548.691 420.638 545.094L422.007 532.794C422.117 531.804 421.929 530.803 421.466 529.92L411.523 510.949C411.128 510.195 410.932 509.354 410.953 508.503L412.818 433.493C412.897 430.31 415.891 428.011 418.986 428.756L448.011 435.742C449.163 436.019 450.376 435.878 451.433 435.345L484.94 418.444C485.814 418.003 486.539 417.316 487.026 416.467L495.187 402.238C496.914 399.227 501.11 398.849 503.347 401.503L584.351 497.606C586.362 499.992 585.72 503.618 583.012 505.168L530.267 535.364L493.954 552.04C492.959 552.497 491.843 552.614 490.775 552.375L451.114 543.499Z",
    "M420.462 546.672C420.113 549.811 416.977 551.844 413.968 550.881L267.888 504.116C264.483 503.026 263.289 498.818 265.615 496.102L346.118 402.086C347.602 400.353 350.07 399.844 352.118 400.849L393.196 421.008C393.421 421.119 393.655 421.213 393.894 421.288L409.384 426.177C411.509 426.847 412.933 428.842 412.878 431.069L410.953 508.503C410.932 509.354 411.128 510.195 411.523 510.949L421.466 529.92C421.929 530.803 422.117 531.804 422.007 532.794L420.462 546.672Z",
    "M287.173 378.293C286.477 378.058 285.842 377.674 285.312 377.166L229.997 324.183C227.926 322.199 224.613 322.36 222.745 324.537L168.557 387.656L128.546 447.739C126.433 450.912 128.506 455.188 132.307 455.494L136.23 455.81C140.351 456.141 142.312 461.047 139.555 464.128L138.115 465.737C137.262 466.69 136.807 467.933 136.842 469.21L137.21 482.447C137.286 485.154 139.501 487.308 142.209 487.308H154.382C155.796 487.308 157.144 486.71 158.092 485.661L177.501 464.183C179.008 462.515 181.443 462.058 183.452 463.066L257.222 500.067C259.276 501.097 261.767 500.595 263.262 498.85L344.935 403.467C346.898 401.175 346.398 397.679 343.87 396.029L323.196 382.531C321.982 381.738 320.483 381.512 319.089 381.91L309.106 384.76C308.131 385.039 307.095 385.014 306.135 384.69L287.173 378.293Z",
    "M182.526 205.311C183.804 202.927 186.746 201.992 189.167 203.2L240.068 228.621C240.956 229.065 241.692 229.763 242.182 230.626L254.948 253.116C255.119 253.417 255.258 253.735 255.363 254.065L262.567 276.641C263.425 279.33 261.889 282.196 259.174 282.97L243.71 287.375C242.761 287.646 241.912 288.191 241.272 288.943L219.354 314.7L161.567 382.021L117.023 448.275C115.848 450.022 113.704 450.846 111.661 450.336L95.1492 446.208C93.6452 445.832 92.4007 444.779 91.7801 443.358L80.5708 417.697C80.1898 416.825 80.0657 415.863 80.2129 414.922L84.2263 389.299C84.3133 388.743 84.4935 388.206 84.7592 387.71L182.526 205.311Z",
    "M188.059 202.647C186.127 201.682 185.033 199.585 185.346 197.448L188.07 178.884C188.24 177.726 188.81 176.664 189.682 175.884L224.279 144.916C224.682 144.556 225.141 144.263 225.637 144.049L244.577 135.9C244.91 135.756 245.226 135.578 245.52 135.366L293.022 101.208L336.495 77.7027C337.226 77.3078 338.043 77.1009 338.873 77.1009H364.205C367.396 77.1009 369.771 80.0507 369.089 83.1687L354.141 151.55C353.965 152.357 353.991 153.196 354.218 153.991L358.686 169.629C359.436 172.255 357.939 174.998 355.324 175.788L311.81 188.936L271.714 198.751L254.322 205.049C253.07 205.503 252.051 206.437 251.49 207.644L243.597 224.637C242.411 227.191 239.349 228.262 236.829 227.003L188.059 202.647Z",
    "M364.279 173.846C361.837 174.144 359.541 172.622 358.865 170.257L354.218 153.991C353.991 153.196 353.965 152.357 354.141 151.55L369.58 80.9221C370.071 78.6773 372.029 77.0559 374.325 76.9918L514.152 73.0901C516.967 73.0115 519.291 75.2721 519.291 78.0882V102.143C519.291 103.251 519.659 104.327 520.337 105.203L523.025 108.675C524.141 110.117 524.383 112.053 523.657 113.725L499.884 168.512C499.129 170.252 497.455 171.415 495.561 171.515L442.113 174.337C441.771 174.355 441.431 174.408 441.1 174.495L407.667 183.321C406.612 183.599 405.496 183.525 404.488 183.11L379.139 172.678C378.346 172.351 377.482 172.234 376.63 172.338L364.279 173.846Z",
    "M574.144 73.2975C573.558 73.0657 572.934 72.9467 572.304 72.9467H524.292C521.53 72.9467 519.292 75.1853 519.292 77.9467V102.143C519.292 103.251 519.659 104.327 520.337 105.203L523.025 108.675C524.141 110.117 524.383 112.053 523.657 113.725L501.165 165.56C499.882 168.518 501.693 171.899 504.866 172.471L511.687 173.699C513.875 174.093 515.54 175.885 515.773 178.096L518.864 207.421C518.955 208.279 519.266 209.099 519.767 209.801L540.222 238.466C541.574 240.359 544.052 241.071 546.202 240.182L587.44 223.141C587.988 222.915 588.573 222.787 589.166 222.766L629.415 221.289C629.982 221.268 630.541 221.151 631.068 220.943L660.677 209.251C663.458 208.152 664.66 204.876 663.249 202.24L661.354 198.701C661.015 198.067 660.542 197.513 659.969 197.078L626.869 171.956C625.809 171.151 625.113 169.957 624.936 168.637L616.762 107.674C616.679 107.053 616.48 106.453 616.175 105.906L605.631 86.9739C605.07 85.9654 604.176 85.1823 603.103 84.7575L574.144 73.2975Z",
    "M581.526 293.533C581.353 292.993 581.09 292.487 580.747 292.035L546.453 246.866C544.47 244.255 545.496 240.474 548.526 239.222L587.44 223.141C587.988 222.915 588.573 222.787 589.166 222.766L629.415 221.289C629.982 221.268 630.541 221.151 631.068 220.943L660.937 209.148C663.623 208.087 666.647 209.516 667.533 212.265L677.943 244.582C678.081 245.009 678.16 245.452 678.18 245.9L683.846 377.448C683.978 380.51 681.349 382.969 678.302 382.633L627.393 377.012C625.315 376.782 623.599 375.284 623.091 373.255L616.583 347.222C616.36 346.331 615.897 345.519 615.243 344.874L590.881 320.85C590.306 320.283 589.877 319.585 589.63 318.816L581.526 293.533Z"
  ]

  const displayDistricts = () => {
    return (districts.map((district, index) => {
      return <District key={index} number={index + 1} points={districts[index]} color={pierre[index]} onDistrictClick={handleClick} />
    }))
  }

  useEffect(() => {
    foo()
  }, [sportsSelection])

  
  const displayTags = () => {
    return (sportsSelection.map((district, index) => {
      return (
        <g id="pins" className="tags">
          <Pin id={district} />
        </g>
      )
    }))
  }

  return (
    <div className='map__wrapper'>
      <svg className="map" viewBox="0 0 761 593">
      <path id="Vector (Stroke)" d="M327.16 279.258C326.949 279.157 326.716 279.106 326.481 279.111L264.945 280.392C264.817 280.394 264.689 280.414 264.566 280.449L242.301 286.792C242.016 286.873 241.762 287.036 241.57 287.262L218.822 314.003L218.82 314.006L218.813 314.013L218.811 314.016L160.883 381.489C160.844 381.535 160.807 381.584 160.773 381.635L115.701 449.31C115.48 449.641 115.4 450.046 115.479 450.437C115.557 450.827 115.787 451.17 116.118 451.39L122.347 455.536C123.037 455.995 123.968 455.808 124.427 455.119L169.195 387.899L226.785 320.82L226.789 320.815L247.792 296.125L266.323 290.846L324.561 289.634L334.752 294.514L334.758 294.517L376.738 314.409L419.706 343.128C419.728 343.143 419.751 343.157 419.773 343.17C419.806 343.189 419.838 343.207 419.872 343.224L469.265 367.785L491.649 388.537L587.334 502.056C587.868 502.689 588.814 502.77 589.447 502.236L595.17 497.416C595.474 497.16 595.664 496.793 595.698 496.396C595.732 496 595.607 495.606 595.351 495.302L499.309 381.361C499.27 381.314 499.227 381.269 499.182 381.228L475.444 359.22C475.339 359.123 475.221 359.041 475.093 358.977L425.055 334.096L382.016 305.329C381.955 305.288 381.891 305.252 381.824 305.22L339.271 285.058L339.268 285.056L339.26 285.052L339.257 285.051L327.16 279.258Z" stroke="white" stroke-width="3" stroke-miterlimit="10" stroke-linejoin="round" fill="white"/>
        {displayDistricts()}
        {displayTags()}
      </svg>
    </div>
  )
}

export default Map
